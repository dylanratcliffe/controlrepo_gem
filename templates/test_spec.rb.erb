require 'spec_helper'

<% test.classes.each do |cls| -%>
describe "<%= cls.name %>" do

<% if @mock_functions -%>
<% @mock_functions.each do |function,params| -%>
<% if params['type'] == 'statement' -%>
MockFunction.new('<%= function %>', {:type => :statement})
<% else -%>
let!(:<%= function %>) { MockFunction.new('<%= function %>') { |f|
    f.stubbed.returns(<%= params['returns'].inspect %>)
  }
}
<% end -%>

<% end -%>
<% end -%>
<% test.nodes.each do |node| -%>
  context "using fact set <%= node.name %>" do
    node_facts = <%= node.fact_set %>
    let(:facts) { node_facts }
<% if @before_conditions -%>
    before :each do
<% @before_conditions.each do |function| -%>
      <%= function %>
<% end -%>
    end
<% end -%>
<% if @after_conditions -%>
    after :each do
<% @after_conditions.each do |function| -%>
      <%= function %>
<% end -%>
    end
<% end -%>
<% if pre_condition -%>
    let(:pre_condition) {
      pp = <%= '<<' %>-END
$onceover_class = '<%= cls.name %>'
$onceover_node = '<%= node.name %>'
<%= pre_condition.chomp %>
END
    }
<% end -%>
    it { should compile }
  end
<% end -%>
end

<% end -%>
